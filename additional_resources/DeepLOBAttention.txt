Training DeepLOBAttention...
  5%|▌         | 1/20 [00:19<06:11, 19.53s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 1/20, Train Loss: 0.9719,           Validation Loss: 1.0590, Duration: 0:00:19.533840, Best Val Epoch: 0
 10%|█         | 2/20 [00:37<05:39, 18.84s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 2/20, Train Loss: 0.8280,           Validation Loss: 0.9788, Duration: 0:00:18.350230, Best Val Epoch: 1
 15%|█▌        | 3/20 [00:56<05:19, 18.81s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 3/20, Train Loss: 0.7554,           Validation Loss: 0.9333, Duration: 0:00:18.776527, Best Val Epoch: 2
 20%|██        | 4/20 [01:15<05:01, 18.83s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 4/20, Train Loss: 0.7098,           Validation Loss: 0.9163, Duration: 0:00:18.847826, Best Val Epoch: 3
 25%|██▌       | 5/20 [01:34<04:41, 18.75s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 5/20, Train Loss: 0.6775,           Validation Loss: 0.9079, Duration: 0:00:18.616528, Best Val Epoch: 4
 30%|███       | 6/20 [01:53<04:26, 19.05s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 6/20, Train Loss: 0.6549,           Validation Loss: 0.9026, Duration: 0:00:19.624756, Best Val Epoch: 5
 35%|███▌      | 7/20 [02:12<04:05, 18.88s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 7/20, Train Loss: 0.6345,           Validation Loss: 0.8870, Duration: 0:00:18.532620, Best Val Epoch: 6
 40%|████      | 8/20 [02:30<03:45, 18.77s/it]Epoch 8/20, Train Loss: 0.6188,           Validation Loss: 0.9491, Duration: 0:00:18.526646, Best Val Epoch: 6
 45%|████▌     | 9/20 [02:50<03:28, 18.99s/it]Epoch 9/20, Train Loss: 0.6053,           Validation Loss: 0.9071, Duration: 0:00:19.474099, Best Val Epoch: 6
 50%|█████     | 10/20 [03:08<03:08, 18.81s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 10/20, Train Loss: 0.5922,           Validation Loss: 0.8800, Duration: 0:00:18.399083, Best Val Epoch: 9
 55%|█████▌    | 11/20 [03:27<02:49, 18.87s/it]Epoch 11/20, Train Loss: 0.5811,           Validation Loss: 0.8810, Duration: 0:00:19.014344, Best Val Epoch: 9
 60%|██████    | 12/20 [03:46<02:30, 18.81s/it]Epoch 12/20, Train Loss: 0.5718,           Validation Loss: 0.9045, Duration: 0:00:18.664559, Best Val Epoch: 9
 65%|██████▌   | 13/20 [04:04<02:10, 18.70s/it]model saved at all_models/DeepLOBAttention.pt
Epoch 13/20, Train Loss: 0.5616,           Validation Loss: 0.8782, Duration: 0:00:18.441861, Best Val Epoch: 12
 70%|███████   | 14/20 [04:24<01:53, 18.88s/it]Epoch 14/20, Train Loss: 0.5538,           Validation Loss: 0.8946, Duration: 0:00:19.294706, Best Val Epoch: 12
 75%|███████▌  | 15/20 [04:42<01:33, 18.70s/it]Epoch 15/20, Train Loss: 0.5468,           Validation Loss: 0.8889, Duration: 0:00:18.285895, Best Val Epoch: 12
 80%|████████  | 16/20 [05:00<01:14, 18.61s/it]Epoch 16/20, Train Loss: 0.5389,           Validation Loss: 0.8909, Duration: 0:00:18.404647, Best Val Epoch: 12
 85%|████████▌ | 17/20 [05:20<00:56, 18.82s/it]Epoch 17/20, Train Loss: 0.5314,           Validation Loss: 0.8884, Duration: 0:00:19.297558, Best Val Epoch: 12
 90%|█████████ | 18/20 [05:38<00:37, 18.62s/it]Epoch 18/20, Train Loss: 0.5251,           Validation Loss: 0.8836, Duration: 0:00:18.141107, Best Val Epoch: 12
 95%|█████████▌| 19/20 [05:57<00:18, 18.66s/it]Epoch 19/20, Train Loss: 0.5189,           Validation Loss: 0.8967, Duration: 0:00:18.775566, Best Val Epoch: 12
100%|██████████| 20/20 [06:15<00:00, 18.80s/it]Epoch 20/20, Train Loss: 0.5140,           Validation Loss: 0.9005, Duration: 0:00:18.933472, Best Val Epoch: 12
Full time to train: 0:06:15.987349. Average time per epoch: 0:00:18.799367

<ipython-input-25-36b4c900162a>:35: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(save_path, map_location=device))
Test acc: 0.7012. Test Loss: 0.7418. Time on test: 0:00:05.450600
              precision    recall  f1-score   support

           0     0.6621    0.6078    0.6338     38447
           1     0.7745    0.7811    0.7778     65996
           2     0.6085    0.6534    0.6301     35100

    accuracy                         0.7012    139543
   macro avg     0.6817    0.6808    0.6806    139543
weighted avg     0.7018    0.7012    0.7010    139543